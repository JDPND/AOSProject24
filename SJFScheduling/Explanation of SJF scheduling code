Explaining the Shortest Job First (SJF) scheduling algorithm code

The code simulates a CPU scheduling algorithm called Shortest Job First.
A class called NumOfProcess that represents a process with a name and burst time (execution time).

In the main method:
Created 79 processes with random burst times between 1 and 10.
Each process is named P1, P2, P3, etc.

The sjfScheduling method does the actual scheduling:
It sorts the processes based on their burst time, shortest first.
It then processes them in this order, calculating waiting time and turnaround time for each.

For each process:
Waiting time is the current time when the process starts.
Turnaround time is waiting time plus burst time.
The current time is updated after each process completes.

The code prints details for each process:
Process name
Burst time
Waiting time
Turnaround time


Finally, it calculates and prints the average waiting time and average turnaround time for all processes.
This algorithm aims to minimize the average waiting time by processing shorter jobs first.
It's simple but not always practical in real systems as it requires knowing the burst time in advance and doesn't consider process arrival times.
